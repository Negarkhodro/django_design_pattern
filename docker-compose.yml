version: '3'

services:
#  redis:
#    build:
#      context: .
#      dockerfile: infrastructure/redis/Dockerfile
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis-data:/data
#
#  postgres:
#    build:
#      context: .
#      dockerfile: infrastructure/postgres/Dockerfile
#    ports:
#      - "5432:5432"
#    volumes:
#      - postgres-data:/var/lib/postgresql.conf/data
#
#  minio:
#    build:
#      context: .
#      dockerfile: infrastructure/minio/Dockerfile
#    ports:
#      - "9000:9000"
#      - "9001:9001"
#
#    volumes:
#      - minio-data:/data
#  rabbitmq:
#    build:
#        context: .
#        dockerfile: infrastructure/rabbitmq/Dockerfile
#    container_name: rabbitmq
#    image: rabbitmq:3-management  # Use the official RabbitMQ image with management UI
#    environment:
#      RABBITMQ_DEFAULT_USER: user      # Default username
#      RABBITMQ_DEFAULT_PASS: password  # Default password
#    ports:
#      - "5672:5672"       # RabbitMQ main port
#      - "15672:15672"     # Management UI port
#    volumes:
#      - rabbitmq_data:/var/lib/rabbitmq
#      - rabbitmq_logs:/var/log/rabbitmq
  elasticsearch:
    build:
      context: .
      dockerfile: infrastructure/elasticsearch/Dockerfile
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  kibana:
    build:
      context: .
      dockerfile: infrastructure/kibana/Dockerfile
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

volumes:
#  redis-data:
#  postgres-data:
#  minio-data:
#  rabbitmq_data:
#  rabbitmq_logs:
  es_data: